(* vim: set syntax=ocaml: *)
type attribute = option[int]

(* Chain of nodes
   We want to see that when we consider a series of dummy disconnected trees, that the results still
   are the same between all the nodes given some hypothetical input values.
 *)

(*
    Topology:
    0 --- 1 --- 2 --- 3 --- 4 --- ...
 *)

let nodes = 6
let edges = {
  0=1;
  1=2;
  2=3;
  3=4;
  4=5;
}

let mapo f o =
  match o with
  | None -> None
  | Some x -> Some (f x)

let mapbetter f o1 o2 =
  match (o1, o2) with
  | (None, x) -> x
  | (x , None) -> x
  | (Some x, Some y) -> Some (f x y)

let min x y = if x < y then x else y

let merge node x y =
  mapbetter min x y

let trans edge x = 
  mapo (fun x -> x + 1) x

let init node =
  match node with
  | 3 -> Some 100
  | 0 -> Some 0
  | _ -> None

let assert node x =
  match x with
  | None -> false
  | Some y -> y < 6


