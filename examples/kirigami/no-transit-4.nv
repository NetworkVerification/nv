(* Four node topology. *)
include "generic/no-transit.nv"

let nodes = 4

let edges = {
    0=1;
    1=2;
    2=3;
}

(* returns the relationship between a and b, where e = a~b *)
let relationship e = match e with
  | 0~1 -> cust
  | 1~0 -> prov
  | 1~2 -> prov
  | 2~1 -> cust
  (* because 3 is a provider for 2, it should not receive the route *)
  | 2~3 -> cust
  | 3~2 -> prov

let init n = match n with
  | 0n -> Some { bgpAd = 0; lp = 100; aslen = 0; med = 0; comms = {} }
  | _ -> None

let sol = solution { init = init; trans = trans; merge = merge; }

assert foldNodes (fun u v acc -> acc && if u = 3n then v = None else assert_node u v) sol true
