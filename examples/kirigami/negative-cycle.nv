type attribute = int

let nodes = 4
let edges = { 0-1; 1=2; 2-3; 3=0; }

let init n = match n with
  | 0n -> 2
  | _ -> 16

(* added +2 to every edge, since NV doesn't have subtraction *)
let trans e x = match e with
  | 0~1 -> x + 3
  | 1~2 -> x
  | 2~1 -> x
  | 2~3 -> x + 3
  | 3~0 -> x + 2
  | 0~3 -> x + 2

let merge n x y = if x < y then x else y

let partition n = match n with
  | 0n -> 0
  | 1n -> 1
  | 2n -> 1
  | 3n -> 0

let interface e = match e with
  | 0~1 -> Some (fun a -> a <= 2)
  | 2~3 -> Some (fun a -> a <= 1)
