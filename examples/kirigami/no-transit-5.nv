(* Five node topology. *)
include "generic/no-transit.nv"

let nodes = 5

let edges = {
    0=1;
    1=2;
    1=3;
    1=4;
    2=3;
    2=4;
}

(* returns the relationship between a and b, where e = a~b.
 * if (relationship a~b = cust) then a is a customer of b.
 *)
let relationship e = match e with
  | 0~1 -> cust
  | 1~0 -> prov
  | 1~2 -> peer
  | 2~1 -> peer
  | 1~3 -> prov
  | 3~1 -> cust
  | 1~4 -> cust
  | 4~1 -> prov
  | 2~3 -> peer
  | 3~2 -> peer
  | 2~4 -> cust
  | 4~2 -> prov

let init n = match n with
  | 0n -> Some { bgpAd = 0; lp = 100; aslen = 0; med = 0; comms = {} }
  | _ -> None

let sol = solution { init = init; trans = trans; merge = merge; }

assert foldNodes (fun u v acc -> acc && assert_node u v) sol true

