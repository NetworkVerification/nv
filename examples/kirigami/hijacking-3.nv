(* Three node hijacking example. *)
include "generic/hijacking.nv"

let hijackPredicate x = true

let nodes = 3

let edges = {
  0=1;
  1=2;
}

(* Simple case where the route from 0 is more preferred by 1 anyway. *)
let edgePref e = match e with
  | 0~1 -> 200
  | 1~0 -> 50
  | 1~2 -> 100
  | 2~1 -> 100

let destination = 0n
let hijacker = 2n

let sol = solution { init = init; trans = trans; merge = merge }

assert foldNodes (fun u v acc -> acc && assert_node u v) sol true
