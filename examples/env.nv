type attribute = (set[int], set[int])

let nodes = 3

let edges = {
  0=1;
  0=2;
}

let merge node x y = 
  let (a,b) = x in 
  let (c,d) = y in
  let env = a union c in
  let internal = b union d in
  (env, internal minus env)

let trans edge x = x 

let init node =
  match node with
  | 0 -> ({}, {5})
  | 1 -> ({}, {3})
  | 2 -> ({3},{})
