type attribute = option[int]

let nodes = 4

let edges = {
 0=1;
 0=2;
 1=2;
 1=3;
 2=3;
}

let mapo f o =
  match o with
  | None -> None
  | Some x -> Some (f x)

let mapbetter f o1 o2 =
  match (o1, o2) with
  | (None, x) -> x
  | (x , None) -> x
  | (Some x, Some y) -> Some (f x y)
     
let min x y = if x < y then x else y

let merge node x y =
  mapbetter min x y

let trans edge x =
  mapo (fun x -> x + 1) x

let init node =
  match node with
  | 0 -> Some 0
  | _ -> None
