include "utils.nv"

type attribute = (option[int], bool)

let nodes = 4

let edges = {
 0=1;
 0=2;
 1=2;
 1=3;
 2=3;
}

let merge node x y =
  let (x,b1) = x in
  let (y,b2) = y in
  (mapbetter (fun x y -> if x < y then x else y) x y, b1 || b2)

let weight edge =
  match edge with
  | 0~1 -> 1
  | 1~2 -> 1
  | _ -> 3

let trans edge x =
  let (x,b) = x in
  (mapo (fun x -> x + (weight edge)) x, b)

let init node =
  match node with
  | 0n -> (Some 0, true)
  | _ -> (None, false)

let assert_node node x =
  let (_,reach) = x in
  reach

let sol = solution {init = init; trans = trans; merge = merge}

assert foldNodes (fun k v acc -> acc && assert_node k v) sol true
