(* vim: set syntax=ocaml: *)
type attribute = option[int]

let nodes = 4

(* Diamond partial mesh network *)
(* unbroken *)
let edges = {
 0=1;
 0=2;
 1=2;
 1=3;
 2=3;
}

let mapo f o =
  match o with
  | None -> None
  | Some x -> Some (f x)

let mapbetter f o1 o2 =
  match (o1, o2) with
  | (None, x) -> x
  | (x , None) -> x
  | (Some x, Some y) -> Some (f x y)

let merge node x y =
  mapbetter (fun x y -> if x < y then x else y) x y

let weight edge =
  match edge with
  | 0~1 -> 1
  | 1~2 -> 1
  | _ -> 3

let trans edge x =
  mapo (fun x -> x + (weight edge)) x

let init node =
  match node with
  | 0n -> Some 0
  | _ -> None
