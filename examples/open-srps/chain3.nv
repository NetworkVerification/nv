(* vim: set syntax=ocaml: *)
type attribute = option[int]

(* Chain of nodes
   We want to see that when we consider a series of dummy disconnected trees, that the results still
   are the same between all the nodes given some hypothetical input values.
 *)

(*
    Looking at nodes 0, 1, 2 and 3 of a very long chain.
    4 --*    *-- 0 --- 1 --- 2 --- 3 --- ...
 *)

(* Node 0: original node.
   Node 1: original node.
   Node 2: original node.
   Node 3: original node.
   Node 4: input from original node 4.
   Node 5: output from node 0 to original node 4.
*)

(* Transfer equivalence function:
   mapo (fun x -> x + 1) x
*)
let nodes = 6
let edges = {
  0=1;
  1=2;
  2=3;
  4-0;
  0-5;
}

let mapo f o =
  match o with
  | None -> None
  | Some x -> Some (f x)

let mapbetter f o1 o2 =
  match (o1, o2) with
  | (None, x) -> x
  | (x , None) -> x
  | (Some x, Some y) -> Some (f x y)

let min x y = if x < y then x else y

let merge node x y =
  mapbetter min x y

let trans edge x = 
  match edge with
  | (4,0) -> x
  | (0,5) -> x
  | _ -> mapo (fun x -> x + 1) x

let init node =
  match node with
  | 2 -> Some 100
  | 4 -> Some 2
  | _ -> None

let assert node x =
  match x with
  | None -> false
  | Some y -> y < 6

