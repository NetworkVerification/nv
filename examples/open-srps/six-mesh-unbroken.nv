(* vim: set syntax=ocaml: *)
type attribute = option[int]

let nodes = 6

(* Hexagon mesh network *)
(* unbroken *)
let edges = {
 0=1;
 0=2;
 0=3;
 0=4;
 0=5;
 1=2;
 1=3;
 1=4;
 1=5;
 2=3;
 2=4;
 2=5;
 3=4;
 3=5;
 4=5;
}

let mapo f o =
  match o with
  | None -> None
  | Some x -> Some (f x)

let mapbetter f o1 o2 =
  match (o1, o2) with
  | (None, x) -> x
  | (x , None) -> x
  | (Some x, Some y) -> Some (f x y)

let merge node x y =
  mapbetter (fun x y -> if x < y then x else y) x y

let trans edge x =
  mapo (fun x -> x + 1) x

let init node =
  match node with
  | 0 -> Some 0
  | _ -> None

