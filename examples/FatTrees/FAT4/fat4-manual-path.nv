type attribute = (option[int],option[int],option[int],option[(int, int, int, int)],option[(int,int,int,int)],option[int])

symbolic d = (1174406656, 32)

require d = (1174406656, 32)

let edges = {
  4-8;
  6-3;
  5-15;
  4-13;
  4-19;
  9-11;
  11-6;
  2-12;
  6-4;
  16-1;
  1-0;
  6-11;
  3-8;
  14-1;
  8-4;
  16-3;
  2-17;
  11-8;
  13-4;
  18-5;
  2-15;
  4-6;
  14-3;
  17-19;
  15-5;
  18-7;
  19-17;
  19-4;
  1-16;
  1-2;
  17-2;
  17-0;
  3-16;
  11-9;
  1-14;
  5-18;
  12-2;
  8-3;
  15-7;
  7-15;
  15-0;
  0-17;
  13-17;
  15-2;
  0-15;
  3-14;
  7-18;
  10-12;
  8-11;
  18-6;
  2-1;
  12-0;
  12-10;
  6-18;
  17-13;
  3-6;
  9-12;
  0-1;
  10-11;
  11-10;
  18-8;
  8-18;
  12-9;
  0-12;
}

let nodes = 20

let ospfIntraArea = 0
let ospfInterArea = 1
let ospfE1 = 2
let ospfE2 = 3

let protoConn = 0
let protoStatic = 1
let protoOspf = 2
let protoBgp = 3

let min x y = if x < y then (x,0) else (y,1)

let max x y = if x < y then (y,1) else (x,0)

let pickOption f x y =
  match (x,y) with
  | (None, None) -> None, None
  | (None, Some b) -> (Some b, Some 1)
  | (Some a, None) -> (Some a, Some 0)
  | (Some a, Some b) ->
  let (fres, fs) = f a b in
  (Some fres, Some fs)

let betterOspf o1 o2 =
  let (_,cost1,areaType1,_) = o1 in
  let (_,cost2,areaType2,_) = o2 in
  if areaType1 > areaType2 then (o1, 0)
  else if areaType2 > areaType1 then (o2, 1)
  else if cost1 <= cost2 then (o1, 0) else (o2, 1)

let betterBgp o1 o2 =
  let (_,lp1,cost1,med1) = o1 in
  let (_,lp2,cost2,med2) = o2 in
  if lp1 > lp2 then (o1, 0)
  else if lp2 > lp1 then (o2, 1)
  else if cost1 < cost2 then (o1, 0)
  else if cost2 < cost1 then (o2, 1)
  else if med1 >= med2 then (o1, 0) else (o2, 1)

let betterEqOption o1 o2 =
  match (o1,o2) with
  | (None, None) -> true
  | (Some _, None) -> true
  | (None, Some _) -> false
  | (Some a, Some b) -> a <= b

let best c s o b cs ss os bs =
  match (c,s,o,b) with
  | (None,None,None,None) -> None
  | _ -> 
      let o = match o with | None -> None | Some (ad,_,_,_) -> Some ad in
      let b = match b with | None -> None | Some (ad,_,_,_) -> Some ad in
      let (x,p1,xs) = if betterEqOption c s then (c,0,cs) else (s,1,ss) in
      let (y,p2,ys) = if betterEqOption o b then (o,2,os) else (b,3,bs) in
      Some (if betterEqOption x y then (p1,xs) else (p2,ys))

let mergeValues x y =
  let (px,cx,sx,ox,bx,_) = x in
  let (py,cy,sy,oy,by,_) = y in
  let (c, cs) = pickOption min cx cy in
  let (s, ss) = pickOption min sx sy in
  let (o, os) = pickOption betterOspf ox oy in
  let (b, bs) = pickOption betterBgp bx by in
  match best c s o b cs ss os bs with
  | None ->
    (None,c,s,o,b,None)
  | Some (bestxy, selector) ->
    if selector = 0 then
       (px,c,s,o,b, bestxy)
    else
       (py,c,s,o,b, bestxy)

let merge node x y = mergeValues x y

let init node =
  match node with
  | 0 -> 
     if (d = (1174405888, 32)) || (d = (167779840, 31)) || (d = (167779328, 31)) || (d = (167780096, 31)) || (d = (167779584, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 1 -> 
     if (d = (167772928, 31)) || (d = (167772672, 31)) || (d = (1174406400, 32)) || (d = (167778304, 31)) || (d = (167779328, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 2 -> 
     if (d = (1174405632, 32)) || (d = (167778304, 31)) || (d = (167778816, 31)) || (d = (167779072, 31)) || (d = (167778560, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 3 -> 
     if (d = (167772416, 31)) || (d = (167772160, 31)) || (d = (167776256, 31)) || (d = (1174406144, 32)) || (d = (167777280, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 4 -> 
     if (d = (1174409216, 32)) || (d = (167775488, 31)) || (d = (167775232, 31)) || (d = (167778048, 31)) || (d = (167777024, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 5 -> 
     if (d = (167773696, 31)) || (d = (167773184, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174407680, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 6 -> 
     if (d = (1174405376, 32)) || (d = (167778048, 31)) || (d = (167777280, 31)) || (d = (167777792, 31)) || (d = (167777536, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 7 -> 
     if (d = (167773952, 31)) || (d = (167773440, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174407936, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 8 -> 
     if (d = (167776256, 31)) || (d = (1174405120, 32)) || (d = (167777024, 31)) || (d = (167776768, 31)) || (d = (167776512, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 9 -> 
     if (d = (167774976, 31)) || (d = (167774464, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174408960, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 10 -> 
     if (d = (167774208, 31)) || (d = (167774720, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174408704, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 11 -> 
     if (d = (167774208, 31)) || (d = (1174408192, 32)) || (d = (167774464, 31)) || (d = (167777792, 31)) || (d = (167776768, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 12 -> 
     if (d = (1174408448, 32)) || (d = (167774976, 31)) || (d = (167774720, 31)) || (d = (167779840, 31)) || (d = (167778816, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 13 -> 
     if (d = (167775744, 31)) || (d = (167775232, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174409728, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 14 -> 
     if (d = (167772928, 31)) || (d = (167772416, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174406912, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 15 -> 
     if (d = (167773952, 31)) || (d = (167773696, 31)) || (d = (1174407424, 32)) || (d = (167778560, 31)) || (d = (167779584, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 16 -> 
     if (d = (167772672, 31)) || (d = (167772160, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174406656, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 17 -> 
     if (d = (167776000, 31)) || (d = (167775744, 31)) || (d = (167779072, 31)) || (d = (167780096, 31)) || (d = (1174409472, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 18 -> 
     if (d = (167773440, 31)) || (d = (167773184, 31)) || (d = (1174407168, 32)) || (d = (167777536, 31)) || (d = (167776512, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | 19 -> 
     if (d = (167776000, 31)) || (d = (167775488, 31)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = None in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else if (d = (1174409984, 32)) then
       let c = Some 0 in
       let s = None in
       let o = None in
       let b = Some (20, 100, 0, 80) in
       let fib = best c s o b in
        (c,s,o,b,fib)
     else (None,None,None,None,None)
  | _ -> (None,None,None,None,None)

 let transferOspf edge o =
   match o with
   | None -> None
   | Some (ad,cost,areaType,areaId) -> (
   match edge with
   | (4,8) -> None
   | (6,3) -> None
   | (5,15) -> None
   | (4,13) -> None
   | (4,19) -> None
   | (9,11) -> None
   | (11,6) -> None
   | (2,12) -> None
   | (6,4) -> None
   | (16,1) -> None
   | (1,0) -> None
   | (6,11) -> None
   | (3,8) -> None
   | (14,1) -> None
   | (8,4) -> None
   | (16,3) -> None
   | (2,17) -> None
   | (11,8) -> None
   | (13,4) -> None
   | (18,5) -> None
   | (2,15) -> None
   | (4,6) -> None
   | (14,3) -> None
   | (17,19) -> None
   | (15,5) -> None
   | (18,7) -> None
   | (19,17) -> None
   | (19,4) -> None
   | (1,16) -> None
   | (1,2) -> None
   | (17,2) -> None
   | (17,0) -> None
   | (3,16) -> None
   | (11,9) -> None
   | (1,14) -> None
   | (5,18) -> None
   | (12,2) -> None
   | (8,3) -> None
   | (15,7) -> None
   | (7,15) -> None
   | (15,0) -> None
   | (0,17) -> None
   | (13,17) -> None
   | (15,2) -> None
   | (0,15) -> None
   | (3,14) -> None
   | (7,18) -> None
   | (10,12) -> None
   | (8,11) -> None
   | (18,6) -> None
   | (2,1) -> None
   | (12,0) -> None
   | (12,10) -> None
   | (6,18) -> None
   | (17,13) -> None
   | (3,6) -> None
   | (9,12) -> None
   | (0,1) -> None
   | (10,11) -> None
   | (11,10) -> None
   | (18,8) -> None
   | (8,18) -> None
   | (12,9) -> None
   | (0,12) -> None
)
 let transferBgp edge b =
   match b with
   | None -> None
   | Some (ad,lp,cost,med) -> (
   match edge with
   | (4,8) -> Some (ad, lp, cost + 1, med)
   | (6,3) -> Some (ad, lp, cost + 1, med)
   | (5,15) -> Some (ad, lp, cost + 1, med)
   | (4,13) -> Some (ad, lp, cost + 1, med)
   | (4,19) -> Some (ad, lp, cost + 1, med)
   | (9,11) -> Some (ad, lp, cost + 1, med)
   | (11,6) -> Some (ad, lp, cost + 1, med)
   | (2,12) -> Some (ad, lp, cost + 1, med)
   | (6,4) -> Some (ad, lp, cost + 1, med)
   | (16,1) -> Some (ad, lp, cost + 1, med)
   | (1,0) -> Some (ad, lp, cost + 1, med)
   | (6,11) -> Some (ad, lp, cost + 1, med)
   | (3,8) -> Some (ad, lp, cost + 1, med)
   | (14,1) -> Some (ad, lp, cost + 1, med)
   | (8,4) -> Some (ad, lp, cost + 1, med)
   | (16,3) -> Some (ad, lp, cost + 1, med)
   | (2,17) -> Some (ad, lp, cost + 1, med)
   | (11,8) -> Some (ad, lp, cost + 1, med)
   | (13,4) -> Some (ad, lp, cost + 1, med)
   | (18,5) -> Some (ad, lp, cost + 1, med)
   | (2,15) -> Some (ad, lp, cost + 1, med)
   | (4,6) -> Some (ad, lp, cost + 1, med)
   | (14,3) -> Some (ad, lp, cost + 1, med)
   | (17,19) -> Some (ad, lp, cost + 1, med)
   | (15,5) -> Some (ad, lp, cost + 1, med)
   | (18,7) -> Some (ad, lp, cost + 1, med)
   | (19,17) -> Some (ad, lp, cost + 1, med)
   | (19,4) -> Some (ad, lp, cost + 1, med)
   | (1,16) -> Some (ad, lp, cost + 1, med)
   | (1,2) -> Some (ad, lp, cost + 1, med)
   | (17,2) -> Some (ad, lp, cost + 1, med)
   | (17,0) -> Some (ad, lp, cost + 1, med)
   | (3,16) -> Some (ad, lp, cost + 1, med)
   | (11,9) -> Some (ad, lp, cost + 1, med)
   | (1,14) -> Some (ad, lp, cost + 1, med)
   | (5,18) -> Some (ad, lp, cost + 1, med)
   | (12,2) -> Some (ad, lp, cost + 1, med)
   | (8,3) -> Some (ad, lp, cost + 1, med)
   | (15,7) -> Some (ad, lp, cost + 1, med)
   | (7,15) -> Some (ad, lp, cost + 1, med)
   | (15,0) -> Some (ad, lp, cost + 1, med)
   | (0,17) -> Some (ad, lp, cost + 1, med)
   | (13,17) -> Some (ad, lp, cost + 1, med)
   | (15,2) -> Some (ad, lp, cost + 1, med)
   | (0,15) -> Some (ad, lp, cost + 1, med)
   | (3,14) -> Some (ad, lp, cost + 1, med)
   | (7,18) -> Some (ad, lp, cost + 1, med)
   | (10,12) -> Some (ad, lp, cost + 1, med)
   | (8,11) -> Some (ad, lp, cost + 1, med)
   | (18,6) -> Some (ad, lp, cost + 1, med)
   | (2,1) -> Some (ad, lp, cost + 1, med)
   | (12,0) -> Some (ad, lp, cost + 1, med)
   | (12,10) -> Some (ad, lp, cost + 1, med)
   | (6,18) -> Some (ad, lp, cost + 1, med)
   | (17,13) -> Some (ad, lp, cost + 1, med)
   | (3,6) -> Some (ad, lp, cost + 1, med)
   | (9,12) -> Some (ad, lp, cost + 1, med)
   | (0,1) -> Some (ad, lp, cost + 1, med)
   | (10,11) -> Some (ad, lp, cost + 1, med)
   | (11,10) -> Some (ad, lp, cost + 1, med)
   | (18,8) -> Some (ad, lp, cost + 1, med)
   | (8,18) -> Some (ad, lp, cost + 1, med)
   | (12,9) -> Some (ad, lp, cost + 1, med)
   | (0,12) -> Some (ad, lp, cost + 1, med)
)

let transferRoute edge x = 
  let (c,s,o,b,fib) = x in
  let o = transferOspf edge o in
  let b = transferBgp edge b in
  (None, None, o, b, fib)

let trans edge x =
   transferRoute edge x

let assert node x =
 if (d = (1174406656, 32)) then
    match x with
    | (None, None, None, None, None) -> false
    | _ -> true
 else
  true