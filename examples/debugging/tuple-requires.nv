type attribute = bool

let nodes = 2

let edges = {0=1;}

symbolic d : (int, int)
require (d = (0,0) || d = (1, 1))

let init n =
  let (a,b) = d in
  a = b

let trans n x = x

let merge n x y = x || y

let assert_node n x = x

let sol = solution {init = init; trans = trans; merge = merge}

assert foldNodes (fun k v acc -> acc && assert_node k v) sol true
