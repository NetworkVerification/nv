include "../utils.nv"

type attribute = dict[tnode, option[int]]

let trans e x = map (fun o -> mapo (fun n -> n + 1) o) x

let merge n x1 x2 =
  combine
  (fun o1 o2 -> mapbetter (fun n1 n2 -> if n1 < n2 then n1 else n2) o1 o2)
  x1 x2
  (Some None) None (Some None) None (* Extra args to combine to make simulator faster *)

let init n =
  let m = (createDict None : dict[tnode, option[int]]) in
  m[n := Some 0]

let sol = solution {init = init; trans = trans; merge = merge}
