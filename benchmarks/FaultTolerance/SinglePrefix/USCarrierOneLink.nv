include "../../SinglePrefix/TopologyZoo/USCarrier.nv"

let transFailure e x =
  let x = mapIf (fun e1 -> e = e1) (fun v -> {connected=None; static=None; ospf=None; bgp=None; selected=None;}) x in
    mapIf (fun e1 -> !(e=e1)) (fun v -> trans e v) x

let merge u x y =
  combine (fun v1 v2 -> merge u v1 v2) x y

let init u = createDict (init u)

let sol = solution {init = init; trans = transFailure; merge = merge}

(*let hasRoute s = forall (fun f -> match f with
                                  | a~b ->
                                    (match (toEdge a b) with | Some _ -> true | _ -> false)) (fun v -> !(v.selected = None)) s
assert (forall (fun u -> u <n 174n) (fun v -> hasRoute v) sol)*)
