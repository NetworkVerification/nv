(* vim: set syntax=ocaml: *)
(* Vertically partitioned version of sp4.nv *)
(* Automatically generated by gen_part_nv.py *)
include "../../../examples/utils.nv"
include "sp4-nosol.nv"
let partition node = match node with
  | 2n -> 0u8
  | 6n -> 0u8
  | 8n -> 0u8
  | 10n -> 0u8
  | 1n -> 1u8
  | 3n -> 1u8
  | 4n -> 1u8
  | 7n -> 1u8
  | 0n -> 2u8
  | 5n -> 2u8
  | 9n -> 2u8
  | 11n -> 2u8
  | 12n -> 2u8
  | 13n -> 2u8
  | 14n -> 2u8
  | 15n -> 2u8
  | 16n -> 2u8
  | 17n -> 2u8
  | 18n -> 2u8
  | 19n -> 2u8

let interface edge =
  let any x = true
    in
    let nothingButBgp x =
      match x with
      | { connected = c; static = s; ospf = o; bgp = b; selected = sel } ->
        c = None && s = None && o = None
    in
    let hasOnlyBgp x =
      match x with
      | { connected = c; static = s; ospf = o; bgp = b; selected = sel } ->
        c = None && s = None && o = None && isSome b && sel = Some 3u2
    in
    match edge with
  | 1~14 -> Some hasOnlyBgp
  | 1~16 -> Some hasOnlyBgp
  | 1~18 -> Some hasOnlyBgp
  | 3~14 -> Some hasOnlyBgp
  | 3~16 -> Some hasOnlyBgp
  | 3~18 -> Some hasOnlyBgp
  | 4~13 -> Some hasOnlyBgp
  | 4~15 -> Some hasOnlyBgp
  | 4~17 -> Some hasOnlyBgp
  | 6~4 -> Some hasOnlyBgp
  | 6~7 -> Some hasOnlyBgp
  | 7~13 -> Some hasOnlyBgp
  | 7~15 -> Some hasOnlyBgp
  | 7~17 -> Some hasOnlyBgp
  | 8~1 -> Some hasOnlyBgp
  | 8~3 -> Some hasOnlyBgp
  | 1~8 -> Some any
  | 3~8 -> Some any
  | 4~6 -> Some any
  | 7~6 -> Some any
  | 13~4 -> Some any
  | 13~7 -> Some any
  | 14~1 -> Some any
  | 14~3 -> Some any
  | 15~4 -> Some any
  | 15~7 -> Some any
  | 16~1 -> Some any
  | 16~3 -> Some any
  | 17~4 -> Some any
  | 17~7 -> Some any
  | 18~1 -> Some any
  | 18~3 -> Some any
  | _ -> None

let sol = solution { init = init; trans = trans; merge = merge; interface = interface; rtrans = trans }
assert foldNodes (fun k v acc -> acc && assert_node k v) sol true
