(* vim: set syntax=ocaml: *)
(* Partitioned version of sp4.nv *)
include "../../../examples/utils.nv"
include "sp4.nv"

(* destination: node 10 *)

(* split along spine-pod edges *)
let partition node = match node with
  | 1n -> 0u8
  | 3n -> 0u8
  | 4n -> 0u8
  | 7n -> 0u8
  | _ -> 1u8

let interface edge = 
  (* let isSome o = match o with
    | None -> false
    | _ -> true
  in *)
  let hasSomeBest x = 
    match x with
    | {connected = c; static = s; ospf = o; bgp = b; selected = sel} ->
    (isSome c || isSome s || isSome o || isSome b) && isSome sel
  in
  match edge with
  (* 1 edges *)
  | 8~1 -> Some hasSomeBest
  | 1~8 -> Some hasSomeBest
  | 1~14 -> Some hasSomeBest
  | 1~16 -> Some hasSomeBest
  | 1~18 -> Some hasSomeBest
  | 14~1 -> Some hasSomeBest
  | 16~1 -> Some hasSomeBest
  | 18~1 -> Some hasSomeBest
  (* 3 edges *)
  | 3~8 -> Some hasSomeBest
  | 3~14 -> Some hasSomeBest
  | 3~16 -> Some hasSomeBest
  | 3~18 -> Some hasSomeBest
  | 8~3 -> Some hasSomeBest
  | 14~3 -> Some hasSomeBest
  | 16~3 -> Some hasSomeBest
  | 18~3 -> Some hasSomeBest
  (* 4 edges *)
  | 6~4 -> Some hasSomeBest
  | 4~6 -> Some hasSomeBest
  | 4~13 -> Some hasSomeBest
  | 4~15 -> Some hasSomeBest
  | 4~17 -> Some hasSomeBest
  | 13~4 -> Some hasSomeBest
  | 15~4 -> Some hasSomeBest
  | 17~4 -> Some hasSomeBest
  (* 7 edges *)
  | 6~7 -> Some hasSomeBest
  | 7~6 -> Some hasSomeBest
  | 7~13 -> Some hasSomeBest
  | 7~15 -> Some hasSomeBest
  | 7~17 -> Some hasSomeBest
  | 13~7 -> Some hasSomeBest
  | 15~7 -> Some hasSomeBest
  | 17~7 -> Some hasSomeBest
  | _ -> None
