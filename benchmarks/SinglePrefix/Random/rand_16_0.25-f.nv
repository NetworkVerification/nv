(* vim: set syntax=ocaml: *)
(* Fully partitioned version of rand_16_0.25.nv *)
(* Automatically generated by gen_part_nv.py *)
type attribute = option[int32]
let mapbetter = (fun f -> (fun o1 -> (fun o2 -> (match (o1,o2) with 
 | (None,x) -> x
 | (x,None) -> x
 | (Some x,Some y) -> Some f x  y 
) ) ) )
let mapo = (fun f -> (fun o -> (match o with 
 | None -> None
 | Some x -> Some f x 
) ) )
let init = (fun n -> (match n with 
 | 0n -> Some 0u32
 | _ -> None
) )
let merge = (fun n -> (fun x1 -> (fun x2 -> mapbetter (fun n1 -> (fun n2 -> if n1 <u32 n2 then 
n1 else 
n2 ) )  x1  x2  ) ) )
let trans = (fun e -> (fun x -> mapo (fun n -> n +u32 1u32 )  x  ) )
let assert_node = (fun u -> (fun x -> ! (x = None) ) )
let sol = solution { init = init; trans = trans; merge = merge; interface = interface; rtrans = trans }
assert foldNodes ((fun u -> (fun x -> (fun acc -> acc && assert_node u  x  ) ) )) sol true
let nodes = 16
let edges = {15n-10n;15n-9n;15n-8n;15n-5n;15n-4n;15n-1n;15n-0n;14n-15n;14n-6n;14n-4n;13n-15n;13n-11n;13n-0n;12n-15n;12n-9n;12n-8n;12n-1n;11n-15n;11n-1n;10n-11n;10n-8n;10n-3n;10n-2n;9n-15n;9n-14n;9n-13n;9n-10n;9n-8n;9n-3n;9n-2n;9n-0n;8n-9n;8n-5n;8n-2n;7n-5n;6n-15n;6n-11n;6n-1n;6n-0n;5n-15n;5n-12n;5n-9n;5n-3n;4n-14n;4n-13n;4n-11n;4n-0n;3n-12n;3n-9n;3n-4n;3n-1n;2n-13n;2n-12n;2n-8n;2n-0n;1n-15n;1n-0n;0n-13n;0n-11n;0n-10n;0n-7n;}
(* {} *)

let partition node = match node with
  | 0n -> 0
  | 1n -> 1
  | 2n -> 2
  | 3n -> 3
  | 4n -> 4
  | 5n -> 5
  | 6n -> 6
  | 7n -> 7
  | 8n -> 8
  | 9n -> 9
  | 10n -> 10
  | 11n -> 11
  | 12n -> 12
  | 13n -> 13
  | 14n -> 14
  | 15n -> 15

let interface edge a =
  match edge with
  | 0~7 -> a = None
  | 0~10 -> a = None
  | 0~11 -> a = None
  | 0~13 -> a = None
  | 1~0 -> a = Some 1
  | 1~15 -> a = Some 1
  | 2~0 -> a = Some 1
  | 2~8 -> a = Some 1
  | 2~12 -> a = Some 1
  | 2~13 -> a = Some 1
  | 3~1 -> a = Some 2
  | 3~4 -> a = Some 2
  | 3~9 -> a = Some 2
  | 3~12 -> a = Some 2
  | 4~0 -> a = Some 1
  | 4~11 -> a = Some 1
  | 4~13 -> a = Some 1
  | 4~14 -> a = Some 1
  | 5~3 -> a = Some 2
  | 5~9 -> a = Some 2
  | 5~12 -> a = Some 2
  | 5~15 -> a = Some 2
  | 6~0 -> a = Some 1
  | 6~1 -> a = Some 1
  | 6~11 -> a = Some 1
  | 6~15 -> a = Some 1
  | 7~5 -> a = Some 3
  | 8~2 -> a = Some 2
  | 8~5 -> a = Some 2
  | 8~9 -> a = Some 2
  | 9~0 -> a = Some 1
  | 9~2 -> a = Some 1
  | 9~3 -> a = Some 1
  | 9~8 -> a = Some 1
  | 9~10 -> a = Some 1
  | 9~13 -> a = Some 1
  | 9~14 -> a = Some 1
  | 9~15 -> a = Some 1
  | 10~2 -> a = Some 2
  | 10~3 -> a = Some 2
  | 10~8 -> a = Some 2
  | 10~11 -> a = Some 2
  | 11~1 -> a = Some 2
  | 11~15 -> a = Some 2
  | 12~1 -> a = Some 2
  | 12~8 -> a = Some 2
  | 12~9 -> a = Some 2
  | 12~15 -> a = Some 2
  | 13~0 -> a = Some 1
  | 13~11 -> a = Some 1
  | 13~15 -> a = Some 1
  | 14~4 -> a = Some 2
  | 14~6 -> a = Some 2
  | 14~15 -> a = Some 2
  | 15~0 -> a = Some 1
  | 15~1 -> a = Some 1
  | 15~4 -> a = Some 1
  | 15~5 -> a = Some 1
  | 15~8 -> a = Some 1
  | 15~9 -> a = Some 1
  | 15~10 -> a = Some 1
