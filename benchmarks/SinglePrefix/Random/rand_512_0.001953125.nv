let dest = 0n
type attribute = option[int32]
let mapbetter = (fun f -> (fun o1 -> (fun o2 -> (match (o1,o2) with 
 | (None,x) -> x
 | (x,None) -> x
 | (Some x,Some y) -> Some f x  y 
) ) ) )
let mapo = (fun f -> (fun o -> (match o with 
 | None -> None
 | Some x -> Some f x 
) ) )
let init = (fun n -> (match n with 
 | 0n -> Some 0u32
 | _ -> None
) )
let merge = (fun n -> (fun x1 -> (fun x2 -> mapbetter (fun n1 -> (fun n2 -> if n1 <u32 n2 then 
n1 else 
n2 ) )  x1  x2  ) ) )
let trans = (fun e -> (fun x -> mapo (fun n -> n +u32 1u32 )  x  ) )
let assert_node = (fun u -> (fun x -> ! (x = None) ) )
let sol = solution {init = init; trans = trans; merge = merge}
assert foldNodes ((fun u -> (fun x -> (fun acc -> acc && assert_node u  x  ) ) )) sol true
let subset = (fun s -> (fun t -> combine ((fun x -> (fun y -> x && y ) )) s t (Some true) (Some false) (Some true) (Some false) = s ) )
let isSome = (fun o -> (match o with 
 | Some _ -> true
 | None -> false
) )
let flipEdge = (fun e -> (match e with 
 | a~b -> toEdge b  a 
) )
let disjoint = (fun s -> (fun t -> combine ((fun x -> (fun y -> x && y ) )) s t (Some true) (Some false) (Some true) (Some false) = createDict false ) )
let nodes = 512
let edges = {510n-494n;507n-128n;506n-445n;504n-340n;504n-129n;503n-277n;503n-217n;503n-36n;502n-183n;501n-223n;500n-488n;500n-228n;500n-197n;500n-47n;500n-21n;499n-245n;495n-379n;492n-32n;490n-352n;489n-505n;488n-505n;488n-267n;487n-490n;487n-448n;486n-173n;485n-168n;485n-139n;482n-177n;481n-176n;480n-324n;480n-212n;479n-473n;479n-310n;478n-244n;477n-391n;477n-333n;476n-384n;476n-84n;472n-493n;472n-350n;471n-95n;470n-496n;468n-35n;467n-451n;466n-10n;463n-370n;462n-483n;461n-205n;461n-135n;461n-48n;460n-173n;457n-484n;457n-97n;456n-336n;456n-17n;455n-357n;455n-231n;454n-281n;453n-443n;453n-351n;452n-391n;450n-348n;448n-207n;445n-155n;444n-350n;442n-408n;442n-84n;440n-398n;440n-150n;439n-387n;438n-4n;437n-237n;435n-488n;435n-131n;431n-415n;430n-211n;429n-441n;429n-72n;427n-406n;426n-492n;426n-79n;421n-168n;420n-79n;419n-22n;416n-244n;415n-346n;415n-65n;414n-387n;414n-372n;414n-359n;413n-35n;412n-83n;409n-251n;407n-457n;407n-30n;404n-388n;404n-153n;403n-188n;400n-201n;399n-451n;399n-18n;398n-362n;398n-30n;397n-353n;397n-137n;395n-144n;394n-473n;394n-371n;393n-240n;393n-140n;392n-62n;390n-401n;390n-19n;389n-418n;388n-6n;386n-476n;386n-422n;386n-340n;386n-267n;386n-163n;384n-9n;383n-131n;382n-17n;381n-406n;381n-108n;380n-46n;379n-77n;379n-21n;376n-36n;375n-110n;374n-425n;374n-349n;374n-72n;372n-112n;369n-22n;368n-470n;367n-466n;366n-273n;363n-371n;362n-465n;361n-6n;358n-270n;357n-465n;356n-440n;356n-369n;355n-378n;355n-236n;355n-91n;352n-114n;351n-218n;350n-460n;349n-1n;347n-441n;346n-63n;346n-22n;345n-261n;344n-15n;343n-235n;343n-227n;342n-451n;342n-198n;340n-109n;339n-305n;338n-99n;337n-478n;336n-489n;336n-323n;336n-150n;335n-73n;335n-66n;335n-22n;334n-287n;334n-215n;334n-75n;332n-141n;332n-110n;328n-454n;324n-173n;322n-18n;321n-237n;320n-224n;320n-180n;318n-98n;313n-170n;312n-375n;309n-355n;308n-427n;308n-161n;305n-245n;303n-485n;303n-167n;302n-19n;301n-357n;301n-21n;299n-352n;298n-404n;297n-305n;296n-38n;295n-394n;295n-62n;294n-47n;290n-257n;287n-327n;287n-282n;284n-455n;284n-216n;284n-16n;280n-484n;277n-506n;277n-278n;276n-26n;275n-139n;275n-29n;274n-290n;272n-455n;272n-155n;272n-43n;271n-499n;271n-177n;270n-362n;270n-198n;269n-326n;269n-281n;269n-242n;268n-440n;267n-482n;266n-489n;265n-481n;265n-477n;265n-322n;262n-143n;262n-106n;261n-282n;258n-61n;256n-303n;255n-334n;254n-403n;253n-98n;251n-79n;250n-52n;249n-188n;249n-54n;249n-8n;248n-298n;247n-172n;241n-78n;239n-43n;238n-425n;237n-103n;236n-370n;236n-356n;236n-83n;236n-12n;235n-315n;233n-167n;232n-461n;231n-481n;231n-45n;230n-392n;228n-354n;227n-215n;226n-345n;225n-60n;224n-276n;224n-197n;223n-135n;222n-319n;222n-26n;219n-341n;218n-220n;217n-330n;216n-138n;215n-71n;214n-96n;213n-227n;212n-10n;211n-202n;211n-23n;210n-504n;210n-501n;210n-162n;210n-155n;210n-89n;208n-456n;208n-72n;207n-44n;206n-490n;206n-461n;205n-132n;205n-82n;204n-409n;204n-394n;202n-408n;201n-212n;200n-191n;200n-154n;200n-42n;198n-351n;198n-208n;197n-58n;195n-494n;195n-89n;195n-53n;194n-46n;193n-488n;192n-119n;191n-87n;190n-362n;190n-258n;188n-333n;188n-330n;188n-164n;187n-376n;186n-94n;185n-204n;182n-376n;182n-318n;182n-125n;181n-441n;181n-365n;179n-383n;179n-222n;178n-454n;178n-442n;178n-82n;177n-364n;177n-186n;176n-380n;176n-370n;173n-411n;171n-45n;168n-450n;168n-276n;167n-147n;166n-98n;166n-60n;165n-102n;164n-268n;163n-351n;163n-247n;163n-183n;162n-336n;160n-464n;160n-417n;159n-499n;157n-371n;157n-46n;156n-168n;155n-87n;153n-425n;153n-236n;150n-196n;149n-300n;149n-28n;148n-309n;145n-197n;144n-364n;143n-466n;142n-204n;141n-401n;141n-210n;140n-147n;139n-405n;137n-301n;137n-299n;136n-330n;128n-143n;128n-63n;127n-112n;126n-498n;126n-327n;121n-373n;121n-134n;120n-296n;120n-205n;118n-447n;117n-2n;115n-429n;114n-400n;114n-230n;111n-329n;109n-279n;108n-432n;108n-87n;107n-153n;104n-299n;102n-484n;102n-384n;102n-246n;102n-74n;101n-202n;100n-412n;100n-403n;100n-56n;99n-372n;99n-369n;99n-196n;98n-495n;97n-498n;97n-38n;97n-35n;96n-58n;95n-380n;95n-263n;95n-3n;94n-116n;93n-320n;92n-378n;92n-341n;91n-233n;91n-80n;88n-126n;83n-462n;83n-334n;83n-288n;82n-303n;81n-378n;78n-375n;78n-324n;78n-123n;77n-122n;76n-246n;75n-207n;71n-289n;71n-276n;69n-389n;69n-62n;68n-39n;67n-148n;66n-76n;62n-440n;62n-242n;62n-112n;61n-273n;60n-473n;58n-425n;58n-293n;58n-249n;56n-485n;56n-481n;56n-417n;55n-317n;55n-75n;52n-418n;49n-410n;48n-405n;48n-113n;46n-194n;46n-60n;45n-23n;44n-267n;44n-168n;41n-183n;38n-104n;37n-327n;37n-317n;37n-155n;37n-145n;36n-404n;36n-139n;36n-75n;36n-3n;35n-465n;35n-200n;34n-283n;33n-272n;32n-358n;32n-163n;30n-196n;30n-127n;30n-23n;28n-433n;27n-420n;25n-491n;24n-364n;23n-77n;22n-174n;21n-272n;20n-219n;19n-451n;19n-188n;18n-119n;17n-10n;16n-392n;14n-123n;13n-200n;9n-217n;8n-154n;7n-47n;7n-41n;6n-370n;6n-290n;4n-423n;3n-262n;2n-59n;1n-304n;0n-196n;}
(* {} *)
